import{a as s,c as a,d as n,o as e}from"./app-D5tjPIRP.js";const l="/molihua-wiki/assets/image-DXMKxavu.png",t="/molihua-wiki/assets/image-1-CHxLlwra.png",p="/molihua-wiki/assets/image-2-BhcRP9Ax.png",h="/molihua-wiki/assets/image-3-BLhzfnrd.png",r="/molihua-wiki/assets/image-12-Dj4UFmst.png",d="/molihua-wiki/assets/image-14-Cl8LYyVQ.png",g="/molihua-wiki/assets/image-11-DIBzaZGW.png",k="/molihua-wiki/assets/image-7-lsROu8fN.png",o="/molihua-wiki/assets/image-10-BZBbu7sN.png",c="/molihua-wiki/assets/image-13-WDuDyP-F.png",m="/molihua-wiki/assets/image-8-CnMFnr4p.png",u="/molihua-wiki/assets/image-9-CwpCzilR.png",y="/molihua-wiki/assets/image-5-CiAVNz90.png",f="/molihua-wiki/assets/image-6-B87wN5bK.png",b="/molihua-wiki/assets/image-4-CN9Jl2-q.png",v="/molihua-wiki/assets/image-27-nvWpPRwQ.png",A="/molihua-wiki/assets/image-28-DOHqcBh4.png",D="/molihua-wiki/assets/image-29-CFYpaWE-.png",_="/molihua-wiki/assets/image-26-CJ30kc_R.png",B="/molihua-wiki/assets/image-25-DPV0N5td.png",C="/molihua-wiki/assets/image-24-DCYHrSw1.png",x="/molihua-wiki/assets/image-23-nNFKngyz.png",w="/molihua-wiki/assets/image-22-QsfQMFLd.png",E="/molihua-wiki/assets/image-21-CETMrvVt.png",z="/molihua-wiki/assets/image-20-grgPARiC.png",q="/molihua-wiki/assets/image-19-DZCInZsW.png",S="/molihua-wiki/assets/image-18-DnPJp27c.png",O="/molihua-wiki/assets/image-17-Bjw7_yij.png",P="/molihua-wiki/assets/image-15-DRhxCuFR.png",G="/molihua-wiki/assets/image-16-3TNif7mz.png",j="/molihua-wiki/assets/image-43-BTo7Eb-B.png",H="/molihua-wiki/assets/image-42-b0NP-ZUA.png",M="/molihua-wiki/assets/image-40-ClKcma4R.png",F="/molihua-wiki/assets/image-39-C7dJS46p.png",R="/molihua-wiki/assets/image-44-DVbSZJBl.png",T="/molihua-wiki/assets/image-38-SM13MZRw.png",L="/molihua-wiki/assets/image-36-CyuQOyd-.png",V="/molihua-wiki/assets/image-37-CLhLrkwt.png",J="/molihua-wiki/assets/image-41-CviX4zBw.png",N="/molihua-wiki/assets/image-34-bICEzH34.png",I="/molihua-wiki/assets/image-35-twyhS-pA.png",W="/molihua-wiki/assets/image-33--wz9KEua.png",K="/molihua-wiki/assets/image-31-KrBrtYVO.png",U="/molihua-wiki/assets/image-32-C9Upzlu4.png",Y="/molihua-wiki/assets/image-30-Cx_L8VGV.png",X="/molihua-wiki/assets/image-56-CWc8xi1k.png",Q="/molihua-wiki/assets/image-55-tV57I2FR.png",Z="/molihua-wiki/assets/image-59-CAgb7Cgv.png",$="/molihua-wiki/assets/image-58-CfI5cVD4.png",ii="/molihua-wiki/assets/image-52-BwxkBg3i.png",si="/molihua-wiki/assets/image-51-Ca5JsfsQ.png",ai="/molihua-wiki/assets/image-50-2hd8xuX5.png",ni="/molihua-wiki/assets/image-49-E2DA6Uy_.png",ei="/molihua-wiki/assets/image-57-trRAF4lp.png",li="/molihua-wiki/assets/image-48-bOO0IioI.png",ti="/molihua-wiki/assets/image-53-CNY0tDVa.png",pi="/molihua-wiki/assets/image-54-DlUkk63o.png",hi="/molihua-wiki/assets/image-47-CVr5Tdz5.png",ri="/molihua-wiki/assets/image-46-2snPti9g.png",di="/molihua-wiki/assets/image-45-B9b4-36u.png",gi="/molihua-wiki/assets/image-72-BHFz2eFK.png",ki="/molihua-wiki/assets/image-73-BZDq0Zeg.png",oi="/molihua-wiki/assets/image-71-Exvm58XS.png",ci="/molihua-wiki/assets/image-70-EN7CPVs1.png",mi="/molihua-wiki/assets/image-67-D9VO5Iwc.png",ui="/molihua-wiki/assets/image-66-CUwCCKV-.png",yi="/molihua-wiki/assets/image-65-Cd2xjGxz.png",fi="/molihua-wiki/assets/image-69-CdzFs8nJ.png",bi="/molihua-wiki/assets/image-74-DkLy_3x6.png",vi="/molihua-wiki/assets/image-64-DM4xcbYk.png",Ai="/molihua-wiki/assets/image-68-C0RTs1f_.png",Di="/molihua-wiki/assets/image-63-BNHblkbE.png",_i="/molihua-wiki/assets/image-60-ImX8vOmT.png",Bi="/molihua-wiki/assets/image-61-BPXt8pz7.png",Ci="/molihua-wiki/assets/image-62-Db2DyW_M.png",xi="/molihua-wiki/assets/image-89-BjaQbzLe.png",wi="/molihua-wiki/assets/image-88-V-GwGsBF.png",Ei="/molihua-wiki/assets/image-87-BcEjFvdh.png",zi="/molihua-wiki/assets/image-85-DHr4KtPs.png",qi="/molihua-wiki/assets/image-84-DBhdGGAe.png",Si="/molihua-wiki/assets/image-83-CdeuGeFN.png",Oi="/molihua-wiki/assets/image-45-B9b4-36u.png",Pi="/molihua-wiki/assets/image-86-7Pyj3hk1.png",Gi="/molihua-wiki/assets/image-76-HJgZSI2G.png",ji="/molihua-wiki/assets/image-81-8NCyA_A2.png",Hi="/molihua-wiki/assets/image-80-UnZ9NQT5.png",Mi="/molihua-wiki/assets/image-79-CruuXlA-.png",Fi="/molihua-wiki/assets/image-76-HJgZSI2G.png",Ri="/molihua-wiki/assets/image-75-FN4RC1l6.png",Ti="/molihua-wiki/assets/image-77--KSO-mnf.png",Li="/molihua-wiki/assets/image-104-g2k9GLEM.png",Vi="/molihua-wiki/assets/image-103-DwstJSw_.png",Ji="/molihua-wiki/assets/image-101-7uBvhkm4.png",Ni="/molihua-wiki/assets/image-100-BtQirMkE.png",Ii="/molihua-wiki/assets/image-99-DPq5piAr.png",Wi="/molihua-wiki/assets/image-98-BHSXf6eY.png",Ki="/molihua-wiki/assets/image-97-DVZu5-A-.png",Ui="/molihua-wiki/assets/image-95-CoqBHp7_.png",Yi="/molihua-wiki/assets/image-93-DTx5iOxT.png",Xi="/molihua-wiki/assets/image-102-4fSxd0oI.png",Qi="/molihua-wiki/assets/image-94-Cnny6znK.png",Zi="/molihua-wiki/assets/image-96-TWICPRgf.png",$i="/molihua-wiki/assets/image-92-GAV1mEow.png",is="/molihua-wiki/assets/image-90-DUOJt5ez.png",ss="/molihua-wiki/assets/image-91-48-hteS2.png",as="/molihua-wiki/assets/image-119-CvJyaBP7.png",ns="/molihua-wiki/assets/image-118-DG-zME3A.png",es="/molihua-wiki/assets/image-116-Bk1H0vde.png",ls="/molihua-wiki/assets/image-115-DIQw4bPD.png",ts="/molihua-wiki/assets/image-114-C7LMkRKC.png",ps="/molihua-wiki/assets/image-113-DVyxVTfz.png",hs="/molihua-wiki/assets/image-112--zjr94Ji.png",rs="/molihua-wiki/assets/image-111-B5T-DABy.png",ds="/molihua-wiki/assets/image-110-Cmdh91XM.png",gs="/molihua-wiki/assets/image-117-CxbEKdPo.png",ks="/molihua-wiki/assets/image-108-JzSjvryc.png",os="/molihua-wiki/assets/image-109-DxifjLB5.png",cs="/molihua-wiki/assets/image-107-D4TCD_S5.png",ms="/molihua-wiki/assets/image-106-DhMJx-hs.png",us="/molihua-wiki/assets/image-105-CQF1NClN.png",ys="/molihua-wiki/assets/Y80_S_I1EHX_EEXJM@3PA-DaWRzxnH.png",fs="/molihua-wiki/assets/image-133-C_oUJKGb.png",bs="/molihua-wiki/assets/image-132-BhVgxt8P.png",vs="/molihua-wiki/assets/image-131-BVROfB4d.png",As="/molihua-wiki/assets/image-130-DjAmhDKR.png",Ds="/molihua-wiki/assets/image-129-DblGtqU0.png",_s="/molihua-wiki/assets/image-128-C-6unrUm.png",Bs="/molihua-wiki/assets/image-123-CrT0d9u7.png",Cs="/molihua-wiki/assets/image-125-BqB8Qsp0.png",xs="/molihua-wiki/assets/image-126-eLkjRwro.png",ws="/molihua-wiki/assets/image-127-BF4zkyoi.png",Es="/molihua-wiki/assets/image-124-77P6x_f8.png",zs="/molihua-wiki/assets/image-121--IRdNKnQ.png",qs="/molihua-wiki/assets/image-122-DyD0zaUv.png",Ss="/molihua-wiki/assets/image-120-BOSSel_a.png",Os="/molihua-wiki/assets/image-134-3TJ_6_xa.png",Ps="/molihua-wiki/assets/image-136-beMDE0VE.png",Gs="/molihua-wiki/assets/image-135-CMEjyHR0.png",js={};function Hs(Ms,i){return e(),a("div",null,[...i[0]||(i[0]=[n(`<blockquote><p>请尽可能在 Linux/Unix（如 macOS）环境下进行开发，我们建议你首先要做的事是给自己安排一个这样合适的环境，如<a href="https://west2-online.feishu.cn/wiki/AUKFw7MVLidXmzkm80ScYDx5nid" target="_blank" rel="noopener noreferrer"> 从格式化硬盘到支持生产力的Ubuntu双系统装机保姆级教程</a></p></blockquote><p>对于所有第一次接触计算机的同学来说，配环境是一道坎。本文尽可能的以最通俗易懂的方式来告诉你如何配置一个最新的本地环境</p><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>请按自己的方式来跳转对应内容</p><h1 id="linux-macos-下环境配置" tabindex="-1"><a class="header-anchor" href="#linux-macos-下环境配置"><span>Linux / macOS 下环境配置</span></a></h1><h2 id="go" tabindex="-1"><a class="header-anchor" href="#go"><span>Go</span></a></h2><blockquote><p>请先确保你具有良好的网络环境，具体可以看安装 Ubuntu 的教程</p></blockquote><h3 id="_1-使用-g-来进行-golang-版本管理控制" tabindex="-1"><a class="header-anchor" href="#_1-使用-g-来进行-golang-版本管理控制"><span>1. 使用 g 来进行 golang 版本管理控制</span></a></h3><p>go 的版本仍在不断更新，虽然版本和版本之间差异没那么大，但是为了便于平滑过渡版本，以及便于部分项目调试（事实上，我见过一些项目对刚出新版本的 go 是有编译问题的），我们这边直接从安装 g 开始入手</p><p>依据官网说明，安装 g 非常的简单</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -sSL</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://raw.githubusercontent.com/voidint/g/master/install.sh</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> bash</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果你使用的是zsh，则~/.bashrc 要改为对应的~/.zshrc  </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">unalias g</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 取消 g 的 alias，git 会占用 g 的名字 </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$HOME/.g/env</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 重载资源 </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$HOME/.bashrc</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在来进行配置，首先要安装一个 go 版本</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> g</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls-remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stable</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 查看远程 go 版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  1.21.11</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  1.22.4</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> g</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1.22.4</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 安装 1.22.4</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Downloading</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 100%</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [===============] (</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">69/69</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB/s</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Computing</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> checksum</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> with</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SHA256</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Checksums</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> matched</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Now</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> using</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> go1.22.4</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 这里演示一下如何切换go版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> g</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 查看本地安装列表，我这里又安装了go 1.21.11版本</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 1.21.11</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  1.22.4</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOVERSION</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 可以看见目前就是 go 1.21.11</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">GOVERSION</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">go1.21.11</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> g</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> use</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1.22.4</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 现在切换到 1.22.4 版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> version</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> go1.22.4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> linux/amd64</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">❯</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOVERSION</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 可以看见已经成功切换了</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">GOVERSION</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">go1.22.4</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置"><span>2. 配置</span></a></h3><p>接下来我们需要做一些环境的配置</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/gopath</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 在你用户的根目录下创建一个 gopath 文件夹负责存放module cache以及基于 go 的 bin 文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># go 1.13版本后请使用go env来进行设置</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GO111MODULE=on</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOROOT=/home/你的用户名/.g/go</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOPATH=/home/你的用户名/gopath</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # gopath需要设置到你用户的根目录下，否则会出现Permission Denied</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看是否设置成功</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -E</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">GOPROXY|GO111MODULE|GOROOT|GOPATH</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+`" alt="利用了管道来输出信息" tabindex="0" loading="lazy"><figcaption>利用了管道来输出信息</figcaption></figure><h3 id="_3-编写" tabindex="-1"><a class="header-anchor" href="#_3-编写"><span>3. 编写</span></a></h3><p>我们在projects中新建一个test文件夹，里面创建一个main.go，写入一个简单的程序</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/projects/test</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/projects/test</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">touch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main.go</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">             # 创建main.go</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main.go</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 填入下面示例代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main.go</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 运行go程序</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-go"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fmt</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">func</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    fmt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello World!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="一个期望的结果" tabindex="0" loading="lazy"><figcaption>一个期望的结果</figcaption></figure><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h2><blockquote><p> 我觉得应该要写点 Anaconda 安装教程。。。</p><p></p></blockquote><p><s>我没有Linux，没有mac，结束</s></p><p>linux和windows一样，安装pycharm，安装conda环境，遇到不懂得可以看看windows篇</p><h3 id="_1-安装python" tabindex="-1"><a class="header-anchor" href="#_1-安装python"><span>1. 安装python</span></a></h3><ul><li><p>打开终端</p></li><li><p>试试python3，如果没not found说明装好了可以跳过</p></li><li><p>否则装一下</p></li></ul><blockquote><p><code>命令：sudo apt install python3</code></p></blockquote><ul><li>同样方法试试pip，如果没有pip</li></ul><blockquote><p><code>命令：sudo apt install python3-pip</code></p></blockquote><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-安装python最好用的ide-pycharm" tabindex="-1"><a class="header-anchor" href="#_2-安装python最好用的ide-pycharm"><span>2. 安装Python最好用的IDE：PyCharm</span></a></h3><blockquote><p><a href="https://www.jetbrains.com/pycharm/download/?section=linux" target="_blank" rel="noopener noreferrer">Download PyCharm: The Python IDE for data science and web development by JetBrains</a></p></blockquote><p>下载</p><figure><img src="'+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>解压</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -zxvf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pycharm-community-2024.1.4.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>进入bin文件夹后运行sh脚本</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pycharm-community-2024.1.4/bin/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./pycharm.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>之后一步步安装</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后可以接windows篇</p><p><a href="https://west2-online.feishu.cn/wiki/H2YSwNxumiOoHRktDi4cGCHwn3d?fromScene=spaceOverview#P4v2dkBMGogtQ9xKtJQcdWB2nZd" target="_blank" rel="noopener noreferrer">1.2 安装中文插件</a></p><h3 id="_3-安装anaconda" tabindex="-1"><a class="header-anchor" href="#_3-安装anaconda"><span>3. 安装Anaconda</span></a></h3><p>建议在清华镜像源下载</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下载完后用sh命令直接安装</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Anaconda3-2024.06-1-Linux-x86_64.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>后续还可以自己尝试将安装源改清华源</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-hello-world" tabindex="-1"><a class="header-anchor" href="#_4-hello-world"><span>4. Hello World!</span></a></h3><p><a href="https://west2-online.feishu.cn/wiki/H2YSwNxumiOoHRktDi4cGCHwn3d?fromScene=spaceOverview#Rso6d326ooXA3ixMltycbMJLnpe" target="_blank" rel="noopener noreferrer">和windows篇一样</a></p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-ai框架pytorch安装" tabindex="-1"><a class="header-anchor" href="#_5-ai框架pytorch安装"><span>5. AI框架Pytorch安装</span></a></h3><p>安装nvidia-GPU版pytorch</p><blockquote><p><a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener noreferrer">pytorch官网get-started</a></p></blockquote><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择自己的配置</p><p>复制指令安装</p><h2 id="frontends" tabindex="-1"><a class="header-anchor" href="#frontends"><span>Frontends</span></a></h2><blockquote><p></p></blockquote><p>其实Windows / Linux / macOS三个的安装差不多，这里一块讲掉。</p><h3 id="_1-下载vscode" tabindex="-1"><a class="header-anchor" href="#_1-下载vscode"><span>1. 下载VSCode</span></a></h3><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>按照自己的操作系统（Windows / Linux / macOS），架构类型（x86 / arm64）下载安装。针对于macOS的用户，VsCode提供了Universal版本的安装包，即通用安装包，会兼容x86和arm64两种架构类型。</p><blockquote><p>但是最好还是直接看一下自己电脑是Intel芯片还是m系列芯片，直接下载对应的版本，uni版本的软件大小基本都会大一倍，无端占空间，个人觉得没必要。如下图所示⬇️</p></blockquote><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Windows用户的安装和常规软件安装步骤一致，安装目录方面建议选择非系统盘。</p><p>Linux用户这边以主流的deb安装为例，安装.deb的安装包后，在当前目录进入终端，输入以下命令即可。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo apt install xxxxx.deb -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>macOS用户下载好后，解压后把应用拖动到“应用程序”文件夹即可完成安装。</p><h3 id="_2-vscode配置" tabindex="-1"><a class="header-anchor" href="#_2-vscode配置"><span>2. VsCode配置</span></a></h3><p>VsCode对于前端开发来说是很强大且方便的一个软件（虽然你也可以选择JetBrains家的WebStorm）</p><p><strong>首先请下载以下插件，最好全部安装，我目前是这套配置</strong></p><table><thead><tr><th><strong>插件名</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>Auto Close Tag</td><td>自动闭合标签，方便html的编写，提高效率</td></tr><tr><td>Auto Rename Tag</td><td>html修改标签名时开始标签和结束标签同时更改，提高效率</td></tr><tr><td>Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</td><td>中文语言包</td></tr><tr><td>Code Spell Checker</td><td>拼写检测，帮助自己命名</td></tr><tr><td>ESLint</td><td>代码格式化工具，检测语法错误、代码风格问题、潜在的代码质量问题</td></tr><tr><td>GitHub Copilot</td><td>很强大的AI，辅助改bug和帮你写代码</td></tr><tr><td>GitLens — Git supercharged</td><td>相当于把整个GitHub搬到vscode了，可以实现整个开发只需要沉浸在vscode里，提高效率</td></tr><tr><td>GitHub Repositories</td><td>GitHub仓库插件</td></tr><tr><td>GitHub Pull Requests</td><td>GitHub的pr插件</td></tr><tr><td>Git Graph</td><td>GitHub的commit记录图，很清晰地描述代码管理情况</td></tr><tr><td>HTML CSS Support</td><td>对html的class和id的补全</td></tr><tr><td>IntelliSense for CSS class names in HTML</td><td>对css类名的自动补全，好像和上面那个差不多，可以一起安装互作补充</td></tr><tr><td>Live Server</td><td>适用于传统三件套开发的快速服务器启动和热更新</td></tr><tr><td>Prettier - Code formatter</td><td>代码格式化工具，和ESLint配合使用，自动格式化代码，使代码符合预定义的格式规则，如缩进、引号使用、行长度等</td></tr><tr><td>TODO Highlight</td><td>可以在代码里使用TODO注释，会有黄色荧光高亮</td></tr><tr><td>Vue - Official</td><td>Vue的语言支持，非常完整，包括对ts的支持</td></tr><tr><td>VS Color Picker</td><td>取色器，提升还原页面时写css的效率</td></tr><tr><td>vscode-icons</td><td>可以在文件夹处显示小图标，比较直观也方便管理</td></tr><tr><td>Vue 3 Snippets</td><td>vue3的一些补充的代码补全，可以更快速开发</td></tr></tbody></table><h3 id="_3-环境的搭建" tabindex="-1"><a class="header-anchor" href="#_3-环境的搭建"><span>3. 环境的搭建</span></a></h3><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同时考虑到现在前端（网页端）的主要框架依旧是vue，同时三件套开发因其低效且可维护性低，已经成为历史，所以接下来我们以Vue3为例构建项目。</p><h4 id="_3-1-node-js" tabindex="-1"><a class="header-anchor" href="#_3-1-node-js"><span>3.1. Node.js</span></a></h4><p>这里我们以v20.15.0(LTS)为例，20版本的足够用了，不必追求最新，防止有bug。</p><p>先安装nvm</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nvm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你是Linux用户，使用nvm安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nvm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">node</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # should print \`v20.15.0\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # should print \`10.7.0\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> 或者，如果你是macOS用户，你应该有brew的包管理器，那么你的操作很简单，终端输入以下命令即可。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node@20</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 对于 Linux 用户，通常是 debian 系的，通过 apt install 安装即可</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你是windows用户，建议直接到官网下载预构建的应用程序，直接一直点下一步安装就行。</p><p>其他的npx/docker自行查阅官网</p><h4 id="_3-2-vue" tabindex="-1"><a class="header-anchor" href="#_3-2-vue"><span>3.2. Vue</span></a></h4><p>在你想要创建项目的文件夹下进入终端，然后输入</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> vue@latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你将会有以下的选项可选</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Project</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> name:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your-project-nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> TypeScript?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> JSX</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Support?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Vue</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Router</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Single</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Page</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Application</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> development?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Pinia</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> state</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> management?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Vitest</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Unit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> testing?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> an</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> End-to-End</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Testing</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Solution?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Cypress</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Nightwatch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Playwright</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ESLint</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> quality?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Prettier</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> formatting?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> …</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> No</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">✔</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Vue</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> DevTools</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 7</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> extension</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> debugging?</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (experimental) … No / Yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Scaffolding</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> project</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your-project-nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">...</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Done.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>第一个是你的项目名字，最好不要取邪门名字（比如什么JQuery），也不要有中文，就正常的项目名就好，用短横线命名法。</p></li><li><p>第二个是是否使用TypeScript，选否的话就是JavaScript，想写ts的就选上。</p></li><li><p>第三个是是否使用JSX。Vue 3 支持两种模板语法：JSX 和 Template，JSX在React更常用，可选可不选。</p></li><li><p>是否使用VueRouter，一个很好用的路由管理，基本都选上。</p></li><li><p>是否使用Pinia，非常好用的全局状态管理，选上。</p></li><li><p>是否使用Vitest做单元测试，选上。</p></li><li><p>是否使用一个端到端的测试工具，看项目需求选。</p></li><li><p>是否用ESLint，选选选！</p></li><li><p>是否用Prettier，选！</p></li><li><p>是否用DevTools 7，看个人意愿选择，鉴于还在experiment所以可不选。</p></li></ul><p>安装完成后，你就可以cd进去你的文件夹了。然后运行如下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your-project-nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后你运行<code>npm run dev</code>之后，就可见如下所示的提示，在浏览器打开即可。</p><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>运行后你就会看到如下界面，说明项目构建成功了，vue3默认采用vite作为脚手架。</p><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后原本的终端就可以关了，在vscode里打开这个项目的文件夹。然后新建终端运行刚才的命令，就可以了。</p><figure><img src="'+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>按这样子的构建方法是最保险的，也最没啥问题的。</p><h3 id="_4-html-css-js三件套的项目启动方法" tabindex="-1"><a class="header-anchor" href="#_4-html-css-js三件套的项目启动方法"><span>4. html+css+js三件套的项目启动方法</span></a></h3><p>直接点击这个就可以启动了，并且自动跳转到浏览器。</p><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>注意！这个能且仅能用作三件套的启动方法，vue项目无法以这种方式启动，而是采用脚手架的方式启动，详见 §3.2. Vue</strong></p></blockquote><h3 id="_5-补充插件" tabindex="-1"><a class="header-anchor" href="#_5-补充插件"><span>5. 补充插件</span></a></h3><p><strong>然后接下来是几个常用的插件安装，按需取用。</strong></p><ul><li>如果你需要和后端对接，也就是有网络请求的需求，这里推荐使用axios。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> axios</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>如果你用到了pinia，请安装这个插件，他可以实现数据持久化，也就是刷新数据不会丢失。</p></li><li><p>如果你用到了组件库，比如<strong>ElementPlus、Vant、TDesign</strong>，请到官网查看安装步骤，过程层都很详细简单，无外乎包的安装，以及main.ts/main.js的引入。</p></li></ul><h2 id="android" tabindex="-1"><a class="header-anchor" href="#android"><span>Android</span></a></h2><p>请参考后文Windows下的配置步骤。Android Studio的安装、升级也可以使用Jetbrains Toolbox管理。</p><h1 id="windows-下环境配置" tabindex="-1"><a class="header-anchor" href="#windows-下环境配置"><span>Windows 下环境配置</span></a></h1><h2 id="go-1" tabindex="-1"><a class="header-anchor" href="#go-1"><span>Go</span></a></h2><blockquote><p></p></blockquote><h3 id="_1-下载go安装包" tabindex="-1"><a class="header-anchor" href="#_1-下载go安装包"><span>1. 下载go安装包</span></a></h3><p><a href="https://golang.google.cn/dl/" target="_blank" rel="noopener noreferrer">All releases - The Go Programming Language</a></p><p>选择windows版本</p><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>打开下载好安装包跟着安装即可</p><p>现在windows版本的安装包非常人性化，不仅能帮你配好环境变量，甚至还能帮你卸载旧版本（如果你有装）</p><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-验证安装" tabindex="-1"><a class="header-anchor" href="#_2-验证安装"><span>2. 验证安装</span></a></h3><p>使用win+R 打开CMD终端</p><p>输入go env 验证安装，注意一下红箭头所指的<strong>GOPATH</strong>和<strong>GOROOT</strong>的路径，然后确认<strong>GO111MODULE</strong>和<strong>GOPROXY</strong>的值是否与图中一致</p><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+w+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后我们需要在终端输入以下命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GO111MODULE=on</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 启用go module</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -w</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GOPROXY=https://goproxy.cn,direct</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 设置go代理，这样国内可以方便拉包</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>为了保险，我们再检查一下环境变量</p><p>win11可以直接搜索 “编辑系统环境变量”</p><figure><img src="`+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>你需要检查的：</p><ol><li><p>是否有GOPATH这个变量，路径是否与go env获取的一致</p></li><li><p>点击PATH-&gt;编辑，图中红箭头的路径应该比之前的GOROOT路径多了一个/bin</p></li></ol><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>环境变量的简单理解：</p><p>GOROOT：Go 编译器和标准库所在的安装目录。目录下的bin文件夹内有一个go.exe文件，当我们在终端输入go命令时，终端会去<strong>系统环境变量的PATH内</strong>寻找这个go.exe文件，所有的go命令的执行依赖这个exe文件</p><p>GOPATH：主要用于存放你的第三方依赖包(在GOPATH/pkg/mod下)。网上搜到的已经过时的教程可能会告诉你你需要在GOPATH里创建你的GO项目，现在这么做会<strong>导致各种各样奇怪的问题</strong></p><p>GOPROXY：下载go依赖包的代理服务器地址，<strong>确保</strong>它的值为<code>https://goproxy.cn,direct</code>，否则你的go依赖包可能拉不下来</p><p>GO111MODULE：这是一个历史遗留的环境变量，用于启动go module，现在的GO项目没有不用到go module的</p></blockquote><h3 id="_3-ide安装" tabindex="-1"><a class="header-anchor" href="#_3-ide安装"><span>3. IDE安装</span></a></h3><p>golang目前推荐两个IDE，<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">vscode</a> 和 <a href="https://www.jetbrains.com/go/" target="_blank" rel="noopener noreferrer">Goland</a></p><p>从我个人的角度，我会更推荐新手选择vscode，可以帮助你更好的理解运行go项目的<strong>过程</strong></p><h4 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span>VSCode</span></a></h4><p>vscode的优点是轻量和泛用</p><p>官网地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code - Code Editing. Redefined</a></p><p>安装vscode就和安装一个普通的软件一样，没什么好说的</p><p>你只需要安装一个go插件就可以了</p><p>第二个 Go Nightly 是预览版，先不要用预览版</p><figure><img src="'+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="goland" tabindex="-1"><a class="header-anchor" href="#goland"><span>Goland</span></a></h4><p>Goland提供了更直观的交互界面，并且会帮你完成新建项目的一些固定操作（例如创建go mod），因为Goland的索引建的比较好，更适合大的项目</p><p>官网地址：<a href="https://www.jetbrains.com/zh-cn/go/" target="_blank" rel="noopener noreferrer">JetBrains GoLand：不只是 Go IDE</a></p><p>下载后打开安装包进行安装</p><p>这些选项可以按你的喜好进行选择（感觉选不选都没什么软用），不过环境变量我们设过了，没有必要选择更新</p><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>有一个坏消息和一个好消息，坏消息是：goland<strong>是收费的，</strong>好消息是：goland<strong>对学生是免费的</strong>，你只需要用你的fzu邮箱去申请一个资格就可以</p><p>申请页面 <a href="https://www.jetbrains.com/zh-cn/community/education/#students" target="_blank" rel="noopener noreferrer">免费教育许可证 - 社区支持</a></p><h3 id="_4-helloworld与项目管理" tabindex="-1"><a class="header-anchor" href="#_4-helloworld与项目管理"><span>4. HelloWorld与项目管理</span></a></h3><p>通常我们会在一个喜欢的位置创建一个Projects文件夹，然后文件夹内一个文件夹对应一个项目。</p><p>现在，我们来创建一个HelloWorld项目</p><ol><li><p>创建一个名叫HeeloWorld的文件夹</p></li><li><p>在终端中初始化go.mod,命令为<code>go mod init {go module name}</code>，<strong>中括号里的是要替换掉的，请看下面</strong></p></li></ol><p>注意：go mod 的名字一般遵循github.com/[github_name]/[project_name]</p><p>我的Github ID叫jiuxia211，创建的项目叫HelloWorld,我就会这样初始化go mod： </p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">go</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mod</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">github.com/jiuxia211/HelloWorld</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+O+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>创建main.go文件，在目录下右键-&gt;新建文件，名字是<code>main.go</code></li></ul><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-go"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> main</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // main包是项目的入口</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fmt</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // fmt 是golang 自带的包，主要用于标准输入输出</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">func</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    fmt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello world</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开终端，输入<code>go run main.go</code> 结果如下</p><figure><img src="`+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="python-1" tabindex="-1"><a class="header-anchor" href="#python-1"><span>Python</span></a></h2><blockquote><p></p></blockquote><h3 id="_1-下载python最好用的ide-pycharm" tabindex="-1"><a class="header-anchor" href="#_1-下载python最好用的ide-pycharm"><span>1. 下载Python最好用的IDE：PyCharm</span></a></h3><blockquote><p>PyCharm官网：<a href="https://www.jetbrains.com/zh-cn/pycharm/" target="_blank" rel="noopener noreferrer">PyCharm：适用于数据科学和 Web 开发的 Python IDE</a></p></blockquote><h4 id="_1-1-安装pycharm" tabindex="-1"><a class="header-anchor" href="#_1-1-安装pycharm"><span>1.1 安装PyCharm</span></a></h4><figure><img src="'+G+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+j+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+H+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-2-安装中文插件" tabindex="-1"><a class="header-anchor" href="#_1-2-安装中文插件"><span>1.2 安装中文插件</span></a></h4><p>现在打开 PyCharm</p><figure><img src="'+M+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-3-新建项目" tabindex="-1"><a class="header-anchor" href="#_1-3-新建项目"><span>1.3 新建项目</span></a></h4><p>现在你可以建一个Python项目，但建议你先看环境搭建部分</p><figure><img src="'+R+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-环境搭建"><span>2. 环境搭建</span></a></h3><h4 id="_2-1-什么是环境-为什么要配环境" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是环境-为什么要配环境"><span>2.1 什么是环境，为什么要配环境</span></a></h4><p>对于Python，一个环境里包括了你写这个Python代码需要用到的所有第三方库，比如深度学习的Pytorch，PyG。第三方库没有内置在python本体中，需要你额外下载(接下来会说明如何快速下载)。</p><p>那么，比如Pytorch一个库就接近2GB，后期最好不要把所有第三方库都放在一个环境里，否则环境太大太大特别难用，所以后期需要对每一个项目单独配环境。</p><p>.</p><p>.</p><p>.</p><p>但初学者不管，对于初学者，最简单的做法是一个环境应对所有问题，抛开环境针对项目的烦恼</p><p>所以接下来第一节讲的是，怎么<strong>通过conda建一个虚拟环境并且以后一直用下去</strong></p><h4 id="_2-2-下载miniconda" tabindex="-1"><a class="header-anchor" href="#_2-2-下载miniconda"><span>2.2 下载Miniconda</span></a></h4><blockquote><p>Miniconda官网：<a href="https://docs.anaconda.com/free/miniconda/" target="_blank" rel="noopener noreferrer">Miniconda #</a></p></blockquote><figure><img src="'+T+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>官网下载完exe后打开</p><figure><img src="'+L+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+V+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+J+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-3-以conda基础环境创建项目" tabindex="-1"><a class="header-anchor" href="#_2-3-以conda基础环境创建项目"><span>2.3 以conda基础环境创建项目</span></a></h4><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+W+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+K+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+U+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这样你就成功完成了Windows下Python配环境，下面讲解怎么通过conda安装第三方库</p><h4 id="_2-4-conda安装第三方库" tabindex="-1"><a class="header-anchor" href="#_2-4-conda安装第三方库"><span>2.4 conda安装第三方库</span></a></h4><p>下面以用conda安装numpy为例</p><figure><img src="'+Y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+X+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">conda install numpy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>conda - 表示conda命令</p><p>install - 安装</p><p>numpy - 安装的第三方库是numpy</p><h3 id="_3-ai框架pytorch安装" tabindex="-1"><a class="header-anchor" href="#_3-ai框架pytorch安装"><span>3. AI框架Pytorch安装</span></a></h3><p>安装nvidia-GPU版pytorch</p><blockquote><p><a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener noreferrer">pytorch官网get-started</a></p></blockquote><figure><img src="'+Q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择自己的配置</p><p>复制指令安装</p><h3 id="_4-结束语" tabindex="-1"><a class="header-anchor" href="#_4-结束语"><span>4. 结束语</span></a></h3><p>这就是最基本的Python环境搭建啦，祝大家身体健康！</p><h2 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h2><blockquote><p></p></blockquote><h3 id="_1-jdk" tabindex="-1"><a class="header-anchor" href="#_1-jdk"><span>1. JDK</span></a></h3><blockquote><p>本文以 JDK21 为例，其他版本的配置流程基本相似</p></blockquote><h4 id="_1-1-下载" tabindex="-1"><a class="header-anchor" href="#_1-1-下载"><span>1.1 下载</span></a></h4><p><a href="https://www.oracle.com/java/technologies/downloads/#jdk21-windows" target="_blank" rel="noopener noreferrer">官网下载</a></p><p><a href="https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.exe" target="_blank" rel="noopener noreferrer">安装包直达下载</a></p><figure><img src="'+Z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-2-安装" tabindex="-1"><a class="header-anchor" href="#_1-2-安装"><span>1.2 安装</span></a></h4><p>下载完成后，双击exe文件进行安装</p><figure><img src="'+$+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>自定义安装路径</p><blockquote><p>推荐专门建一个Environment文件夹存放相关环境配置的文件</p></blockquote><figure><img src="'+ii+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+si+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-3-环境变量配置" tabindex="-1"><a class="header-anchor" href="#_1-3-环境变量配置"><span>1.3 环境变量配置</span></a></h4><p>查找设置</p><figure><img src="'+ai+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ni+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ei+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新建<code>JDK-21</code>变量，变量值选择刚才安装的JDK21目录</p><figure><img src="'+li+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接着新建变量<code>JAVA_HOME</code>，变量值引用上面配置的JDK-21</p><p>变量值为<code>%JDK-21%</code> (即为上面bin目录变量的变量名 头尾加上%)</p><figure><img src="'+ti+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>继续新建变量<code>CLASSPATH</code>，变量值为 <code>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;%JAVA_HOME%\\lib;</code></p><figure><img src="'+pi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后双击Path变量，进行编辑</p><figure><img src="'+hi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新建输入<code>%JAVA_HOME%</code>，最后点击确认，配置完成</p><figure><img src="'+ri+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-4-验证" tabindex="-1"><a class="header-anchor" href="#_1-4-验证"><span>1.4 验证</span></a></h4><p>键盘按住 win+r 接着输入<code>cmd</code>打开终端</p><figure><img src="'+di+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>输入<code>java -version</code>查看JDK版本信息</p><figure><img src="'+gi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功得到如下JDK21的版本信息，即表示安装成功</p><figure><img src="'+ki+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-5-hello-world" tabindex="-1"><a class="header-anchor" href="#_1-5-hello-world"><span>1.5 Hello, World!</span></a></h4><h5 id="命令行运行单文件" tabindex="-1"><a class="header-anchor" href="#命令行运行单文件"><span>命令行运行单文件</span></a></h5><p>这里用到了JDK21的新特性：</p><p>编写 HellWorld.java 文件，用于测试运行</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> HelloWorld</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello, World!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开java文件所在目录的终端</p><p>在路径栏中输入<code>cmd</code>，回车打开终端</p><figure><img src="`+oi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ci+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用javac命令编译HelloWorld.java文件，将其编译成HelloWorld.class字节码文件</p><blockquote><p>javac --release 21 --enable-preview HelloWorld.java</p></blockquote><figure><img src="'+mi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看目录，可得到一个新的.class文件</p><figure><img src="'+ui+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用java命令运行.class文件</p><blockquote><p>java --enable-preview HelloWorld</p></blockquote><figure><img src="'+yi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>终端输出 Hello, World! 表示运行成功！</p><h5 id="idea运行项目" tabindex="-1"><a class="header-anchor" href="#idea运行项目"><span>IDEA运行项目</span></a></h5><blockquote><p>强烈建议Java项目使用<a href="https://www.jetbrains.com/zh-cn/idea/" target="_blank" rel="noopener noreferrer">IntelliJ IDEA</a>进行编程</p></blockquote><p>新建一个项目hellojava，Nmae填写新项目的根文件夹名，Build system选择IntelliJ默认构建工具，JDK选择先前安装过的JDK21</p><blockquote><p>推荐专门建一个如JavaTotal文件夹来专门存放Java项目</p></blockquote><figure><img src="'+fi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>创建成功后，显示如下：</p><figure><img src="'+bi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击绿色三角形图标即可运行Main.java文件</p><figure><img src="'+vi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>得到如下输出</p><figure><img src="'+Ai+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>终端输出 Hello, World! 表示运行成功！</p><p><strong>最后来介绍IDEA为我们生成的文件结构</strong></p><figure><img src="'+Di+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><p>.idea文件夹</p><p>存放项目的配置信息，如历史记录，版本控制等信息。非必要不需要我们操作。</p></li><li><p>out文件夹</p><p>存放的是编译后的.class字节码文件，当我们运行Main.java文件后，会自动生成。</p></li><li><p>src文件夹</p><p>这是我们存放项目源代码的文件夹。是我们主要操作的文件夹。</p></li><li><p>.gitignore文件</p><p>是IDEA的git忽略文件，git会自动忽略在该文件内的文件名的文件</p></li><li><p>hellojava.iml文件</p><p>.iml是IDEA的工程配置文件，里面是当前project的一些配置信息。非必要不需要我们操作。</p></li></ol><h3 id="_2-maven" tabindex="-1"><a class="header-anchor" href="#_2-maven"><span>2. Maven</span></a></h3><h4 id="_2-1-什么是maven" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是maven"><span>2.1 什么是Maven</span></a></h4><figure><img src="'+_i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从上图可以看到，我们可以通过Maven作为Build system来构建一个项目，可以认为它是一个项目管理工具，可以通过pom.xml文件的配置来自动获取jar包，拿到你想要的依赖。日后我们的Java项目最见的就是使用Maven来构建的。</p><h4 id="_2-2-下载" tabindex="-1"><a class="header-anchor" href="#_2-2-下载"><span>2.2 下载</span></a></h4><p>这里我们选择最新的3.9.8版本下载，下面是下载官网：</p><figure><img src="'+Bi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这是maven-3.9.8版本的zip包直达下载：<a href="https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.zip" target="_blank" rel="noopener noreferrer">apache-maven-3.9.8-bin.zip</a></p><p>也可以根据自习需要选择其他版本，入口如下：</p><figure><img src="'+Ci+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后将下载后的zip包解压到我们的Environment目录下：</p><figure><img src="'+xi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>压缩得到：</p><figure><img src="'+wi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-3-环境变量配置" tabindex="-1"><a class="header-anchor" href="#_2-3-环境变量配置"><span>2.3 环境变量配置</span></a></h4><figure><img src="'+Ei+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+zi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新建<code>MAVEN_HOME</code>变量，变量值为刚才解压的maven目录：</p><figure><img src="'+qi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在Path变量中添加<code>%MAVEN_HOME%\\bin</code></p><figure><img src="'+Si+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-4-验证" tabindex="-1"><a class="header-anchor" href="#_2-4-验证"><span>2.4 验证</span></a></h4><p>键盘按住 win+r 接着输入<code>cmd</code>打开终端</p><figure><img src="'+Oi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>输入 <code>mvn -v</code> 后回车 查看maven的版本信息</p><p>输出如下信息，即配置成功</p><figure><img src="'+Pi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-5-配置镜像仓库" tabindex="-1"><a class="header-anchor" href="#_2-5-配置镜像仓库"><span>2.5 配置镜像仓库</span></a></h4><p>打开 Environment\\apache-maven-3.9.8\\conf 下的 settings.xml 配置文件</p><figure><img src="'+Gi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>找到 mirrors 配置的位置</p><figure><img src="'+ji+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由于默认的远程仓库地址是国外的，所以我们可以加入国内阿里云的镜像仓库地址，提高下载速度</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirror</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">alimaven</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">aliyun maven</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">https://maven.aliyun.com/repository/public/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirrorOf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">central</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirrorOf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirror</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将其加入到&lt;mirrors&gt;&lt;/mirrors&gt;中，默认的仓库地址的上面，如下：</p><figure><img src="`+Hi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-6-配置本地仓库" tabindex="-1"><a class="header-anchor" href="#_2-6-配置本地仓库"><span>2.6 配置本地仓库</span></a></h4><p>在apache-maven-3.9.8目录下创建一个名为<code>maven-repo</code>的文件夹</p><figure><img src="'+Mi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>打开 Environment\\apache-maven-3.9.8\\conf 下的 settings.xml 配置文件</p><figure><img src="'+Fi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>找到&lt;settings&gt;，可以找到下面有&lt;localRepository&gt;</p><figure><img src="'+Ri+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们在&lt;localRepository&gt;的注解下面配置我们本地仓库，仓库地址是刚才我们在apache-maven-3.9.8目录下创建一个名为<code>maven-repo</code>的文件夹路径，如下：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">localRepository</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">F:\\Environment\\apache-maven-3.9.8\\maven-repo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">localRepository</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+Ti+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>保存后关闭文件</p><h4 id="_2-7-idea配置maven" tabindex="-1"><a class="header-anchor" href="#_2-7-idea配置maven"><span>2.7 IDEA配置Maven</span></a></h4><p>打开IDEA的Settings</p><figure><img src="'+Li+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>设置Maven配置</p><figure><img src="'+Vi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+Ji+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><p>将 Maven home path 修改为解压的Maven目录</p></li><li><p>勾选 User settings file 右边的Override，然后修改为Maven目录下conf目录里的 <strong>settings.xml </strong>文件</p></li><li><p>Local repository 是步骤 2.6 配置的本地仓库，一般会自动识别更新</p></li></ol><p>配置完成后，点击ok，保存设置</p><figure><img src="'+Ni+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-8-测试" tabindex="-1"><a class="header-anchor" href="#_2-8-测试"><span>2.8 测试</span></a></h4><p>我们来创建一个Maven项目，来测试Maven，顺便介绍一下Maven项目的结构</p><p>先new project，Build system选择 Maven </p><figure><img src="'+Ii+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>创建项目后，我们可以得到如下项目结构</p><figure><img src="'+Wi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下面来介绍一下各个包及其用途</p><ol><li><p><code>pom.xml</code></p><ul><li>项目的核心配置文件，定义了项目的依赖、插件、构建配置等信息。</li></ul></li><li><p><code>src/main/java</code></p><ul><li>放置项目的主要源代码。按包结构组织代码，以反映应用的层次和功能。</li></ul></li><li><p><code>src/main/resources</code></p><ul><li>该目录包含项目的非Java资源文件，如配置文件、静态资源等。</li></ul></li><li><p><code>src/test/java</code></p><ul><li>放置测试代码，按与main主代码类似的包结构组织。</li></ul></li></ol><p>创建项目后，打开pom.xml文件，准备加入依赖</p><figure><img src="'+Ki+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>加入如下junit依赖，这是用于单元测试的依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">4.13.2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+Ui+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意：每个依赖以&lt;dependency&gt;&lt;/dependency&gt;为单位，全部要求放在&lt;dependencies&gt;&lt;/dependencies&gt;中</p></blockquote><p>随后，加载Maven配置，点击下面标出的任意一个即可</p><figure><img src="'+Yi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果加载错误，请共享先前解压的apache-maven-3.9.8目录的权限给当前电脑的用户：</p><figure><img src="'+Xi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+Qi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>随后重新加载即可，加载成功后爆红消失</p><figure><img src="'+Zi+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>开始测试，创建如下MvnTest.java文件</p><figure><img src="'+$i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>编写测试代码</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">poldroc</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> org</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> MvnTest</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    @</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Test</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello world!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+is+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>当我们能够成功引入<em>org.junit.Test ，</em>说明我们的Maven已经确认配置成功</p></blockquote><p>随后，点击第8行的绿色三角标，即可运行单元测试</p><figure><img src="'+ss+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到，我们成功输出了Hello world!</p><figure><img src="'+as+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-gradle" tabindex="-1"><a class="header-anchor" href="#_3-gradle"><span>3. Gradle</span></a></h3><p>某些项目可能使用的是gradle用来进行依赖管理，所以在此也介绍一下gradle的安装用法（基本用不上，但是有，小白可略过，也可以装着反正没什么坏处）</p><p>在安装之前建议大家先行创建一个总的gradle文件夹，里面可以放不同版本的gradle，如下图</p><figure><img src="'+ns+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-1-下载" tabindex="-1"><a class="header-anchor" href="#_3-1-下载"><span>3.1 下载</span></a></h4><p><a href="https://gradle.org/releases/" target="_blank" rel="noopener noreferrer">官网下载</a></p><figure><img src="'+es+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>图上是8.8版本，我们可以根据需要下载，下载后进行解压（记一下这个时候解压的路径）</p><h4 id="_3-2-环境变量配置" tabindex="-1"><a class="header-anchor" href="#_3-2-环境变量配置"><span>3.2 环境变量配置</span></a></h4><p>与1.3同步骤，新建GRADLE_HOME环境变量指向你的解压路径</p><figure><img src="'+ls+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后将%GRADLE_HOME%\\bin添加到Path环境变量中，点击确定</p><figure><img src="'+ts+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击Path系统变量进行编辑</p><figure><img src="'+ps+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加%GRADLE_HOME%\\bin到Path，点击确定</p><p>然后验证Gradle是否安装成功</p><p>cmd输入gradle -v</p><figure><img src="'+hs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>至此Gradle环境变量配置完成</p><h4 id="_3-3-配置镜像仓库" tabindex="-1"><a class="header-anchor" href="#_3-3-配置镜像仓库"><span>3.3 配置镜像仓库</span></a></h4><p>找到刚刚解压的路径，找到init.d文件夹下的init.gradle用编辑器打开（这里用的是vscode，记事本也可以）</p><figure><img src="'+rs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ds+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加如下配置，这里使用阿里云镜像</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-plain"><span class="line"><span>allprojects {</span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        mavenLocal()</span></span>
<span class="line"><span>        maven { name &quot;Alibaba&quot; ; url &quot;https://maven.aliyun.com/repository/public&quot; }</span></span>
<span class="line"><span>        maven { name &quot;Bstek&quot; ; url &quot;http://nexus.bsdn.org/content/groups/public/&quot; ;allowInsecureProtocol = true}</span></span>
<span class="line"><span>        mavenCentral()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    buildscript { </span></span>
<span class="line"><span>        repositories { </span></span>
<span class="line"><span>            maven { name &quot;Alibaba&quot; ; url &#39;https://maven.aliyun.com/repository/public&#39; }</span></span>
<span class="line"><span>            maven { name &quot;Bstek&quot; ; url &#39;http://nexus.bsdn.org/content/groups/public/&#39; ;allowInsecureProtocol = true}</span></span>
<span class="line"><span>            maven { name &quot;M2&quot; ; url &#39;https://plugins.gradle.org/m2/&#39; }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-配置本地仓库" tabindex="-1"><a class="header-anchor" href="#_3-4-配置本地仓库"><span>3.4 配置本地仓库</span></a></h4><p>新建一个repository文件夹，我的习惯是与gradle版解压文件夹放在同一目录，如下</p><figure><img src="`+gs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>回到刚刚创建环境变量的位置，添加环境变量GRADLE_USER_HOME</p><p>设置值为你repository文件夹的位置，确定</p><figure><img src="'+ks+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后你就装好了一个gradle版本</p><h4 id="_3-5-idea配置gradle" tabindex="-1"><a class="header-anchor" href="#_3-5-idea配置gradle"><span>3.5 IDEA配置Gradle</span></a></h4><p>打开idea,打开setting面板，如图找到Gradle设置</p><figure><img src="'+os+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+cs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+ms+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击apply,ok</p><p>开始构建，如果使用此方式构建除了错误</p><p>Execution failed for task ‘:compileJava’.，Could not resolve all dependencies for configuration ‘:compileClasspath’.或者no tasks available</p><p>有可能是idea和gradle版本不兼容导致的，需要修改</p><figure><img src="'+us+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时在你idea的右侧有gradle的标志</p><figure><img src="'+ys+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击如图可以进行构建</p><h2 id="android-1" tabindex="-1"><a class="header-anchor" href="#android-1"><span>Android</span></a></h2><blockquote><p></p></blockquote><h3 id="_1-下载并安装-android-studio" tabindex="-1"><a class="header-anchor" href="#_1-下载并安装-android-studio"><span>1. 下载并安装 Android Studio</span></a></h3><p>谷歌官网（注意网络代理先配置好，以正常访问，可参看其他教程）：https://developer.android.com/studio?hl=zh-cn</p><p>下载后启动安装。</p><figure><img src="'+fs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>红框中是虚拟机，推荐安装，虽然后续开发可能以真机调试为主。</p><figure><img src="'+bs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择路径，<strong>推荐安装到比较大的非系统盘</strong>。</p><p>其他一路Next即可，等待安装完成。</p><figure><img src="'+vs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>统计信息，个人倾向于不发送。</p><figure><img src="'+As+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+Ds+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>拉取组件，由于网络原因，可能会失败，弹出如下报错。此时点击Setup Proxy</p><figure><img src="'+_s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入代理配置页面，如图配置代理，注意端口号填写要和代理软件配置的端口号一致。</p><blockquote><p>代理设置后续还可以在主界面-File-Settings-Apperance &amp; Behavior-System Settings-HTTP Proxy修改。</p></blockquote><figure><img src="'+Bs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>OK确认配置后，关闭所有Android Studio的窗口，注意保持上面弹窗中选项勾选，重新打开Android Studio，等待拉取组件列表完成。<strong>（如果前面没有拉取失败的错误，则不需要这一步，直接Next即可）</strong></p><figure><img src="'+Cs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+xs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择自定义安装，并在下一界面修改Android Sdk存储路径，<strong>推荐改到比较大的非系统盘</strong>，点击Next。</p><blockquote><p>Android Sdk存储路径后续还可以在主界面-File-Settings-Languages &amp; Frameworks-Android SDK修改。</p></blockquote><figure><img src="'+ws+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同意协议，点Finish开始下载，等待下载解压完成。</p><figure><img src="'+Es+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>出现此界面，代表Android Studio及Sdk初步配置完成。</p><h3 id="_2-工程建立" tabindex="-1"><a class="header-anchor" href="#_2-工程建立"><span>2. 工程建立</span></a></h3><p>点击New Project，出现如下界面</p><figure><img src="'+zs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们一般比较常用的是Empty Views Activity 和Empty Activity两种，前者是传统的View体系界面开发，后者是使用Compose进行界面开发。以Empty Views Activity为例，新建一个项目。</p><figure><img src="'+qs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Name就是App名字，通常安装后显示在桌面图标下方；Package Name包名是区分不同App的唯一标识，<a href="https://dev.mi.com/docs/appsmarket/operation_docs/package_name/" target="_blank" rel="noopener noreferrer">介绍</a>。其他设定可以暂时保持默认。点击完成。</p><figure><img src="'+Ss+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新项目加载过程中可能再次弹出代理弹窗，勾选不再提示即可。</p><figure><img src="'+Os+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>等待底部提示条加载完，就可以开始coding了。这个过程耗时比较长，主要是下载依赖耗费的时间。</p><h3 id="_3-虚拟机调试" tabindex="-1"><a class="header-anchor" href="#_3-虚拟机调试"><span>3. 虚拟机调试</span></a></h3><figure><img src="'+Ps+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>红框处是想要运行的目标机器，默认是虚拟机；点击绿框处按钮即可编译运行。</p><figure><img src="'+Gs+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>工具栏-Tools-Device Manager可以管理虚拟机和真机。</p><h3 id="_4-真机调试" tabindex="-1"><a class="header-anchor" href="#_4-真机调试"><span>4. 真机调试</span></a></h3><p>由于虚拟机性能一般，而且往往不能完全反映真实场景，我们经常使用真机进行开发调试。关于真机连接，可以参考<a href="https://blog.csdn.net/qq_35251502/article/details/80770448" target="_blank" rel="noopener noreferrer">这个教程</a>。需要注意的几点问题是，打开USB调试并连接电脑后，手机上可能会弹出授权弹窗，需要及时允许；部分系统在USB调试开关的附近提供了USB安装的开关，往往默认处于关闭状态，调试时安装App需要提前打开这个选项。</p><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h2><p>参考 Linux/macOS 安装教程</p><h1 id="善用-docker-compose" tabindex="-1"><a class="header-anchor" href="#善用-docker-compose"><span>善用 docker-compose</span></a></h1><h2 id="为什么建议用-docker-compose" tabindex="-1"><a class="header-anchor" href="#为什么建议用-docker-compose"><span>为什么建议用 docker-compose</span></a></h2><p>当你学的东西越来越多，你的项目需要用到的中间件也会越来越多。这时，启动项目可能非常麻烦：每次启动项目都需要逐个启动各种所需的中间件。即使你指定了安装目录，大部分中间件也会将某些数据存到默认的系统盘，导致系统盘被污染。</p><p>并且，由于每个人的系统环境不同，在你电脑上运行的项目难以被别人尝试运行。需要自己启动重新数据库，各种中间件的账号密码、配置文件也需要修改</p><p>Docker Compose 是一个强大的工具，用于定义和管理多个 Docker 容器的应用程序。它简化了容器化应用程序的部署和管理过程，提供了一种简单而高效的方式来定义多个容器之间的关系和依赖。通过 Docker Compose，你可以轻一键启动和停止所有服务。</p><h2 id="安装-docker-和-docker-compose" tabindex="-1"><a class="header-anchor" href="#安装-docker-和-docker-compose"><span>安装 Docker 和 docker-compose</span></a></h2><p>Docker compose 现在已经被集成到 Docker中，无需额外安装，我们只需要安装 Docker 即可</p><p>这里给出官方文档（需要科学上网）</p><p><a href="https://docs.docker.com/guides/getting-started/get-docker-desktop/" target="_blank" rel="noopener noreferrer">Get Docker Desktop</a></p><p>需要注意的是，现在Docker官方镜像仓库已经被墙了，<strong>可以考虑为你的 Docker 配置代理</strong></p><h2 id="使用-docker-compose-在本地部署-mysql-和-redis" tabindex="-1"><a class="header-anchor" href="#使用-docker-compose-在本地部署-mysql-和-redis"><span>使用 docker-compose 在本地部署 MySQL 和 Redis</span></a></h2><blockquote><p>这里我给出一个简单的模板 yaml，需要为重要的 env 配置做注释，以及让新生知道每个重要的参数都做了什么事，之后提供 go 和 java 的连接 demo，知道怎么正确的用就可以了</p></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">networks</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    west2online</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        driver</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bridge</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">services</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    mysql</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        container_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mysql</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mysql:latest</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        restart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> always</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        environment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MYSQL_ROOT_PASSWORD=west2online</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MYSQL_DATABASE=west2online</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MYSQL_USER=west2online</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MYSQL_PASSWORD=west2online</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        volumes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./config/sql:/docker-entrypoint-initdb.d/</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./data/mysql:/var/lib/mysql</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        ports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">3306:3306</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        networks</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> west2online</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    redis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        container_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis:latest</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        restart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> always</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        command</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis-server --requirepass west2online</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        volumes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./data/redis:/data</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        ports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">6379:6379</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        networks</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> west2online</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,492)])])}const Rs=s(js,[["render",Hs]]),Ts=JSON.parse('{"path":"/LearningRoute/yx3hwkq2/","title":"我有绝妙的环境配置方法(西二在线)","lang":"zh-CN","frontmatter":{"title":"我有绝妙的环境配置方法(西二在线)","createTime":"2025/10/04 22:47:11","permalink":"/LearningRoute/yx3hwkq2/"},"readingTime":{"minutes":26.59,"words":7978},"git":{"createdTime":1759912112000,"updatedTime":1759912112000},"filePathRelative":"notes/LearningRoute/2.WEB方向/3.多种环境配置方法/我有绝妙的环境配置方法.md","headers":[]}');export{Rs as comp,Ts as data};
