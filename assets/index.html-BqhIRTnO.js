import{a as e,c as s,d as n,o as a}from"./app-D5tjPIRP.js";const t={};function d(l,i){return a(),s("div",null,[...i[0]||(i[0]=[n(`<h2 id="一、nginx-介绍" tabindex="-1"><a class="header-anchor" href="#一、nginx-介绍"><span>一、Nginx 介绍</span></a></h2><h3 id="_1-什么是nginx" tabindex="-1"><a class="header-anchor" href="#_1-什么是nginx"><span>1. 什么是Nginx？</span></a></h3><p>Nginx 是一款高性能的 Web 服务器与反向代理服务，核心特点如下：</p><ul><li>资源占用低：运行时占用内存少，对服务器硬件资源消耗低。</li><li>并发能力强：在同类型网页服务器中，并发处理能力表现突出。</li><li>行业应用广：中国大陆众多知名网站均采用 Nginx，包括百度、京东、新浪、网易、腾讯、淘宝等。</li></ul><h3 id="_2-nginx-的作用" tabindex="-1"><a class="header-anchor" href="#_2-nginx-的作用"><span>2. Nginx 的作用</span></a></h3><p>Nginx 主要核心功能包括：</p><ul><li>负载均衡：分发请求到多个后端服务器，提升系统整体处理能力。</li><li>静态服务器：高效托管静态资源（如 HTML、CSS、JS、图片等）。</li><li>正反向代理：正向代理（代理客户端访问外部资源）、反向代理（代理后端服务，隐藏真实服务器地址）。</li></ul><h3 id="_3-nginx-下载" tabindex="-1"><a class="header-anchor" href="#_3-nginx-下载"><span>3. Nginx 下载</span></a></h3><p>官方下载地址：<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener noreferrer">http://nginx.org/en/download.html</a><br> 版本选择说明：</p><ul><li>Mainline 版本：功能全面，包含最新特性，推荐使用。</li><li>Stable version：稳定版，bug 修复更及时，适合对稳定性要求极高的场景。</li><li>Legacy versions：旧版本，仅用于兼容老系统，不推荐新部署使用。</li></ul><h3 id="_4-验证-nginx-安装成功" tabindex="-1"><a class="header-anchor" href="#_4-验证-nginx-安装成功"><span>4. 验证 Nginx 安装成功</span></a></h3><ol><li>启动 Nginx 后，打开浏览器。</li><li>在地址栏输入 <code>localhost</code>（Nginx 默认使用 80 端口）。</li><li>若能看到 Nginx 欢迎界面，说明安装启动成功。</li></ol><h3 id="_5-nginx-基础部署-vue-项目相关" tabindex="-1"><a class="header-anchor" href="#_5-nginx-基础部署-vue-项目相关"><span>5. Nginx 基础部署（Vue 项目相关）</span></a></h3><ol><li>先对 Vue 项目执行打包命令（如 <code>npm run build</code>），生成 <code>dist</code> 文件夹。</li><li>将 <code>dist</code> 文件夹内的所有内容，复制到 Nginx 安装目录下的 <code>html</code> 文件夹中。</li><li>启动 Nginx 后，访问 <code>localhost</code> 即可看到 Vue 项目页面。</li></ol><h3 id="_6-nginx-基本指令-windows-cmd-环境" tabindex="-1"><a class="header-anchor" href="#_6-nginx-基本指令-windows-cmd-环境"><span>6. Nginx 基本指令（Windows CMD 环境）</span></a></h3><p>需先在 CMD 中进入 Nginx 安装目录，再执行以下指令：</p><table><thead><tr><th>操作目的</th><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>查看版本</td><td><code>nginx.exe -V</code></td><td>显示 Nginx 版本及编译配置信息</td></tr><tr><td>启动 Nginx</td><td><code>start nginx</code></td><td>后台启动 Nginx，无命令行阻塞</td></tr><tr><td>查看 Nginx 进程</td><td><code>tasklist /fi &quot;imagename eq nginx.exe&quot;</code></td><td>检查 Nginx 是否正在运行</td></tr><tr><td>快速关闭</td><td><code>nginx.exe -s stop</code></td><td>强制终止 Nginx 进程，可能丢失未完成任务</td></tr><tr><td>有序关闭</td><td><code>nginx.exe -s quit</code></td><td>等待所有请求处理完成后，优雅关闭</td></tr><tr><td>强制关闭进程</td><td><code>taskkill /f /t /im nginx.exe</code></td><td>彻底杀死所有 Nginx 相关进程</td></tr><tr><td>重启 Nginx</td><td><code>nginx.exe -s reload</code></td><td>重新加载配置文件，无需重启进程</td></tr><tr><td>检测 80 端口占用</td><td>\`netstat -ano</td><td>findstr &quot;80&quot;\`</td></tr></tbody></table><p><strong>静态资源存放说明</strong>：Vue 项目的 <code>static</code> 文件夹资源，需放在 Nginx 配置的 <code>location /</code> 对应的目录下（默认是 <code>html</code> 文件夹），确保资源能被正确访问。</p><h3 id="_7-nginx-高阶使用" tabindex="-1"><a class="header-anchor" href="#_7-nginx-高阶使用"><span>7. Nginx 高阶使用</span></a></h3><p>若需在 Nginx 中配置多个 Server（多站点/多服务），可参考教程：<a href="http://bugshouji.com/bbs-read-run?tid=1241" target="_blank" rel="noopener noreferrer">http://bugshouji.com/bbs-read-run?tid=1241</a></p><h2 id="二、vue-项目部署流程-超详细步骤" tabindex="-1"><a class="header-anchor" href="#二、vue-项目部署流程-超详细步骤"><span>二、Vue 项目部署流程（超详细步骤）</span></a></h2><p>完整部署步骤请参考外部链接：<a href="http://bugshouji.com/bbs-read-run?tid=1523" target="_blank" rel="noopener noreferrer">http://bugshouji.com/bbs-read-run?tid=1523</a></p><h2 id="三、部署常见问题及解决方案" tabindex="-1"><a class="header-anchor" href="#三、部署常见问题及解决方案"><span>三、部署常见问题及解决方案</span></a></h2><h3 id="_1-问题-vue-项目使用-history-模式-部署后页面显示空白" tabindex="-1"><a class="header-anchor" href="#_1-问题-vue-项目使用-history-模式-部署后页面显示空白"><span>1. 问题：Vue 项目使用 History 模式，部署后页面显示空白</span></a></h3><p><strong>解决方案</strong>：将 Vue 项目打包生成的 <code>dist</code> 文件夹内容，完整放到 Nginx 服务器的 <code>html</code> 目录下，通过 Nginx 访问（而非直接打开 <code>dist/index.html</code>）。</p><h3 id="_2-问题-vue-打包成-dist-后-原项目中的代理跨域设置失效" tabindex="-1"><a class="header-anchor" href="#_2-问题-vue-打包成-dist-后-原项目中的代理跨域设置失效"><span>2. 问题：Vue 打包成 <code>dist</code> 后，原项目中的代理跨域设置失效</span></a></h3><p><strong>原因</strong>：Vue 开发环境的 <code>proxy</code> 配置仅在开发阶段生效，打包后需通过服务器（如 Nginx）配置反向代理实现跨域。<br><strong>解决方案</strong>：修改 Nginx 配置文件（<code>conf/nginx.conf</code>），添加以下代码：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-nginx"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">location</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> /api/ </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    proxy_pass </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">http://172.16.8.9:8888/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 后端接口地址，末尾必须加“/”和分号</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意事项</strong>：</p><ul><li><code>location</code> 后的 <code>/api</code> 需改为 <code>/api/</code>（末尾加斜杠）。</li><li><code>proxy_pass</code> 配置的后端地址末尾，必须加“/”，且语句结尾需加“;”。</li></ul><h3 id="_3-问题-vue-子组件页面刷新后显示-404" tabindex="-1"><a class="header-anchor" href="#_3-问题-vue-子组件页面刷新后显示-404"><span>3. 问题：Vue 子组件页面刷新后显示 404</span></a></h3><p><strong>原因</strong>：History 模式下，刷新页面时浏览器会直接请求 URL 路径，Nginx 未配置对应路由转发，导致 404。<br><strong>解决方案</strong>：修改 Nginx 配置文件的 <code>location /</code> 节点，添加 <code>try_files</code> 配置：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-nginx"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">location</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> / </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    root </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  html</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          # Nginx 静态资源根目录（默认是 html 文件夹）</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    index </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index.html index.htm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 默认首页</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    try_files </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">uri</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">uri</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/ /index.html</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 将所有请求转发到 index.html，由 Vue 路由处理</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关标签" tabindex="-1"><a class="header-anchor" href="#相关标签"><span>相关标签</span></a></h2><ul><li>前端开发：打包、部署、前端</li><li>服务器：Nginx、Nginx 多服务</li><li>项目部署：Vue 项目部署、常见问题</li></ul><h2 id="参考视频链接" tabindex="-1"><a class="header-anchor" href="#参考视频链接"><span>参考视频链接</span></a></h2><p><a href="https://www.bilibili.com/video/BV1x84y1k7qf/?spm_id_from=333.337.search-card.all.click&amp;vd_source=60947311e5670c01151806f02277b2a7" target="_blank" rel="noopener noreferrer">使用nginx部署vue项目及常见问题</a></p><h2 id="贡献者" tabindex="-1"><a class="header-anchor" href="#贡献者"><span>贡献者</span></a></h2><div class="contributors-list" style="display:flex;gap:20px;flex-wrap:wrap;margin-top:20px;"><div style="text-align:center;"><img src="https://avatars.githubusercontent.com/u/184400136?v=4" alt="李持恒" style="width:80px;border-radius:50%;"><p style="margin-top:8px;"><a href="https://github.com/Preface-lb" target="_blank">李持恒</a></p></div></div>`,39)])])}const h=e(t,[["render",d]]),o=JSON.parse('{"path":"/LearningRoute/Nginx/","title":"前端打包后本地部署","lang":"zh-CN","frontmatter":{"title":"前端打包后本地部署","createTime":"2025/10/04 18:35:07","permalink":"/LearningRoute/Nginx/"},"readingTime":{"minutes":4.15,"words":1244},"git":{"createdTime":1759912112000,"updatedTime":1759912112000},"filePathRelative":"notes/LearningRoute/2.WEB方向/1.WEB前端/9.前端打包后本地部署.md","headers":[]}');export{h as comp,o as data};
