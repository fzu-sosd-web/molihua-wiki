import{a as i,c as s,d as a,o as t}from"./app-D5tjPIRP.js";const n={};function r(l,e){return t(),s("div",null,[...e[0]||(e[0]=[a(`<h2 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1. 介绍</span></a></h2><p>Git 是一个分布式版本控制系统，用于跟踪和管理项目中的代码更改。GitHub 是一个托管 Git 仓库的在线平台，它使多人协作变得更容易。</p><p>本指南将教你如何开始使用 Git 和 GitHub，以及如何解决可能出现的问题。</p><h2 id="_2-安装-git" tabindex="-1"><a class="header-anchor" href="#_2-安装-git"><span>2. 安装 Git</span></a></h2><p>首先，你需要在计算机上安装 Git。你可以从 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">Git 官方网站</a> 下载适用于你的操作系统的安装程序。</p><p><strong>具体安装教程不多赘述，请参考博客<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496" target="_blank" rel="noopener noreferrer">安装Git</a>。</strong></p><p>安装完成后，打开终端（在 Windows 上使用 Git Bash 或命令提示符，Mac 和 Linux 上使用终端），运行以下命令以确认安装成功：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-配置-git" tabindex="-1"><a class="header-anchor" href="#_3-配置-git"><span>3. 配置 Git</span></a></h2><p>在开始使用 Git 之前，你需要配置一些基本信息，如你的用户名和电子邮件地址。运行以下命令来配置：</p><p><strong>切记切记，这边的your name指的就是你的帐号名字，引号里面的才需要你自己修改成你自己的用户名和邮箱</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git config --global user.name &quot;Your Name&quot;</span></span>
<span class="line"><span>git config --global user.email &quot;your.email@example.com&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="_4-创建一个-github-帐户" tabindex="-1"><a class="header-anchor" href="#_4-创建一个-github-帐户"><span>4. 创建一个 GitHub 帐户</span></a></h2><p>如果你还没有 GitHub 帐户，前往 <a href="https://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 注册一个帐户。</p><h2 id="_5-创建一个新的仓库" tabindex="-1"><a class="header-anchor" href="#_5-创建一个新的仓库"><span>5. 创建一个新的仓库</span></a></h2><ol><li>登录到 GitHub 帐户。</li><li>点击右上角的加号（+）按钮，选择 &quot;New repository&quot;。</li><li>输入仓库名称，选择<strong>公开或私有</strong>，然后点击 &quot;Create repository&quot;。</li></ol><h2 id="_6-克隆仓库" tabindex="-1"><a class="header-anchor" href="#_6-克隆仓库"><span>6. 克隆仓库</span></a></h2><p>因为我们打算使用ssh的形式来完成和github的通信，所以需要跟着这篇博客来完成ssh的认证</p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416" target="_blank" rel="noopener noreferrer">远程仓库</a>， 后续我会自己写一篇更好理解的（画饼）。</p><p>要在本地计算机上使用仓库，你需要将其克隆到本地：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git@github.com:your-username/your-repo.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>替换 <code>your-username</code> 和 <code>your-repo</code> 为你的 GitHub 用户名和仓库名称。</strong></p><h2 id="_7-添加和提交更改" tabindex="-1"><a class="header-anchor" href="#_7-添加和提交更改"><span>7. 添加和提交更改</span></a></h2><ol><li>在本地编辑文件。</li><li>使用以下命令将更改添加到暂存区：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git add &#39;filename&#39;</span></span>
<span class="line"><span>可以使用 git add . 来把当前目录下所有文件都加进去</span></span>
<span class="line"><span>RockRockWhite:&quot;git add .中.是相对当前工作路径的所有文件&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>记得我说的吗？引号里面的需要改成你自己的东西！</strong></p><ol start="3"><li>使用以下命令提交更改：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git commit -m &#39;Description of the changes&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_8-拉取和合并更改" tabindex="-1"><a class="header-anchor" href="#_8-拉取和合并更改"><span>8. 拉取和合并更改</span></a></h2><p>在你开始工作之前，确保你的本地仓库是最新的。使用以下命令拉取远程更改并将它们合并到你的分支：</p><p><strong>记得我说的吗？引号里面的需要改成你自己的东西！确认你的远程仓库的主分支名称是main还是master！</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git pull origin &#39;your origin branchname&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_9-发布更改" tabindex="-1"><a class="header-anchor" href="#_9-发布更改"><span>9. 发布更改</span></a></h2><p>将本地更改发布到 GitHub 仓库：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git push origin &#39;your origin branchname&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_10-常见错误和解决方案" tabindex="-1"><a class="header-anchor" href="#_10-常见错误和解决方案"><span>10. 常见错误和解决方案</span></a></h2><h3 id="_1-错误-fatal-remote-origin-already-exists" tabindex="-1"><a class="header-anchor" href="#_1-错误-fatal-remote-origin-already-exists"><span>1. 错误 : <code>fatal: remote origin already exists</code></span></a></h3><p><strong>解决方案</strong>: 这表示你已经添加了一个名为 &quot;origin&quot; 的远程仓库。你可以使用以下命令来更改远程仓库的 URL：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git remote set-url origin new-url</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-错误-permission-denied-publickey" tabindex="-1"><a class="header-anchor" href="#_2-错误-permission-denied-publickey"><span>2. 错误: <code>Permission denied (publickey).</code></span></a></h3><p><strong>解决方案</strong>: 这表示你没有正确的 SSH 密钥配置。请参考 <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" target="_blank" rel="noopener noreferrer">GitHub SSH 密钥文档</a> 进行设置。</p><h3 id="_3-错误-fatal-not-a-git-repository-or-any-of-the-parent-directories-git" tabindex="-1"><a class="header-anchor" href="#_3-错误-fatal-not-a-git-repository-or-any-of-the-parent-directories-git"><span>3. 错误：<code>fatal: not a git repository (or any of the parent directories): .git</code></span></a></h3><p><strong>解决方案</strong>：这个错误通常表示你不在一个包含Git仓库的目录中。确保你在正确的目录中运行Git命令，或者在目标目录中初始化一个新的Git仓库：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-错误-error-your-local-changes-to-the-following-files-would-be-overwritten-by-merge" tabindex="-1"><a class="header-anchor" href="#_4-错误-error-your-local-changes-to-the-following-files-would-be-overwritten-by-merge"><span>4. 错误：<code>error: Your local changes to the following files would be overwritten by merge</code></span></a></h3><p><strong>解决方案</strong>：这个错误表示你有未提交的更改，而Git无法自动合并。你可以选择放弃本地更改或提交本地更改后再进行合并。如果要放弃更改，可以使用以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git stash</span></span>
<span class="line"><span>git pull origin branch-name</span></span>
<span class="line"><span>git stash pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-错误-remote-support-for-password-authentication-was-removed" tabindex="-1"><a class="header-anchor" href="#_5-错误-remote-support-for-password-authentication-was-removed"><span>5. 错误：<code>remote: Support for password authentication was removed</code></span></a></h3><p><strong>解决方案</strong>：GitHub 不再支持使用密码进行认证。你应该配置SSH密钥并使用它们进行认证。请查看 <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" target="_blank" rel="noopener noreferrer">GitHub的SSH密钥文档</a> 以设置SSH密钥。</p><h3 id="_6-错误-fatal-refusing-to-merge-unrelated-histories" tabindex="-1"><a class="header-anchor" href="#_6-错误-fatal-refusing-to-merge-unrelated-histories"><span>6. 错误：<code>fatal: refusing to merge unrelated histories</code></span></a></h3><p><strong>解决方案</strong>：这个错误通常发生在合并两个不相关的Git历史时。你可以使用以下命令来合并它们：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>git pull origin branch-name --allow-unrelated-histories</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_7-错误-fatal-unable-to-access-https-github-com-your-username-your-repo-git-ssl-certificate-problem" tabindex="-1"><a class="header-anchor" href="#_7-错误-fatal-unable-to-access-https-github-com-your-username-your-repo-git-ssl-certificate-problem"><span>7. 错误：<code>fatal: unable to access &#39;https://github.com/your-username/your-repo.git/&#39;: SSL certificate problem</code></span></a></h3><p><strong>解决方案</strong>：这个错误可能是由于SSL证书问题引起的。你可以尝试切换到使用SSH协议来解决此问题，或者验证你的系统上的SSL证书。</p><h3 id="_8-错误-error-pathspec-filename-did-not-match-any-file-s-known-to-git" tabindex="-1"><a class="header-anchor" href="#_8-错误-error-pathspec-filename-did-not-match-any-file-s-known-to-git"><span>8. 错误：<code>error: pathspec &#39;filename&#39; did not match any file(s) known to git</code></span></a></h3><p><strong>解决方案</strong>：这个错误通常表示Git无法找到指定的文件。确保文件名拼写正确，并且文件在Git仓库中。</p><h3 id="_9-错误-error-failed-to-push-some-refs-to-https-github-com-your-username-your-repo-git" tabindex="-1"><a class="header-anchor" href="#_9-错误-error-failed-to-push-some-refs-to-https-github-com-your-username-your-repo-git"><span>9. 错误：<code>error: failed to push some refs to &#39;https://github.com/your-username/your-repo.git&#39;</code></span></a></h3><p><strong>解决方案</strong>：这个错误表示你试图将更改推送到GitHub仓库时发生问题。可能是因为你没有足够的权限或远程仓库已经有了一些不同的更改。确保你有权限并尝试使用<code>git pull</code>来合并远程更改，然后再次尝试<code>git push</code>。</p><h2 id="_12-结语" tabindex="-1"><a class="header-anchor" href="#_12-结语"><span>12. 结语</span></a></h2><p>这个指南涵盖了 Git 和 GitHub 的基本操作，以及一些常见的错误</p><h2 id="贡献者" tabindex="-1"><a class="header-anchor" href="#贡献者"><span>贡献者</span></a></h2><div class="contributors-list" style="display:flex;gap:20px;flex-wrap:wrap;margin-top:20px;"><div style="text-align:center;"><img src="https://avatars.githubusercontent.com/u/94302726?v=4" alt="魏知乐" style="width:80px;border-radius:50%;"><p style="margin-top:8px;"><a href="https://github.com/spaceluke" target="_blank">魏知乐</a></p></div></div>`,63)])])}const d=i(n,[["render",r]]),h=JSON.parse('{"path":"/LearningRoute/4h347d0p/","title":"basic","lang":"zh-CN","frontmatter":{"comments":true,"title":"basic","createTime":"2025/10/05 15:06:54","permalink":"/LearningRoute/4h347d0p/"},"readingTime":{"minutes":5.02,"words":1507},"git":{"createdTime":1744202614000,"updatedTime":1759912112000},"filePathRelative":"notes/LearningRoute/1.Git/basic.md","headers":[]}');export{d as comp,h as data};
