import{a as o,c as i,d as l,o as t}from"./app-D5tjPIRP.js";const r={};function d(c,e){return t(),i("div",null,[...e[0]||(e[0]=[l('<h2 id="场景描述" tabindex="-1"><a class="header-anchor" href="#场景描述"><span>场景描述</span></a></h2><p>现在需要你来帮我们设计一个实验室官网的系统，负责管理实验室成员的信息和功能。</p><p>系统将包含以下角色：<strong>用户、学生、老师、正式成员、考核成员和管理员。</strong></p><h2 id="任务结构" tabindex="-1"><a class="header-anchor" href="#任务结构"><span><strong>任务结构</strong></span></a></h2><ol><li><p><strong>抽象类 <code>Member</code></strong></p><ul><li><p><strong>属性</strong>：姓名（<code>String name</code>）、ID（<code>int id</code>）。</p></li><li><p><strong>方法</strong>：</p><ul><li><p><code>public abstract String getRole()</code>：返回成员角色。</p></li><li><p><code>public void viewProfile()</code>：显示个人信息（姓名和ID）。</p></li><li><p><code>public void editProfile(String newName, int newId)</code>：修改个人信息。</p></li></ul></li></ul></li><li><p><strong>具体类</strong></p><ul><li><p><strong><code>User</code></strong></p><ul><li>继承<code>Member</code>，实现<code>getRole()</code>返回“用户”。</li></ul></li><li><p><strong><code>Student</code></strong></p><ul><li>继承<code>Member</code>，实现<code>getRole()</code>返回“学生”。</li></ul></li><li><p><strong><code>Teacher</code></strong></p><ul><li>继承<code>Member</code>，实现<code>getRole()</code>返回“老师”。</li></ul></li><li><p><strong><code>Admin</code></strong></p><ul><li>继承<code>Member</code>，实现<code>getRole()</code>返回“管理员”。</li></ul></li></ul></li><li><p><strong>接口 <code>LabFunctions</code></strong></p><ul><li><p><strong>方法</strong>：</p><ul><li><p><code>void signUpLab()</code>：报名实验室。</p></li><li><p><code>void viewProfile()</code>：查看个人信息（用户和学生实现）。</p></li></ul></li><li><p><strong>实现</strong>：</p><ul><li><code>User</code>和<code>Student</code>类实现<code>LabFunctions</code>接口。</li></ul></li></ul></li><li><p><strong>实验室类 <code>Lab</code></strong></p><ul><li><p><strong>属性</strong>：成员列表（<code>List&lt;Member&gt; members</code>）。</p></li><li><p><strong>方法</strong>：</p><ul><li><p><code>public void addMember(Member member)</code>：添加成员到列表。</p></li><li><p><code>public void assignSeats(List&lt;AssessmentMember&gt; members)</code>：分配座位。</p><ul><li>实现逻辑：可以根据成员ID轮流分配座位，确保公平。</li></ul></li></ul></li></ul></li></ol><h2 id="贡献者" tabindex="-1"><a class="header-anchor" href="#贡献者"><span>贡献者</span></a></h2><div class="contributors-list" style="display:flex;gap:20px;flex-wrap:wrap;margin-top:20px;"><div style="text-align:center;"><img src="https://avatars.githubusercontent.com/u/119308964?v=4" alt="严文骏" style="width:80px;border-radius:50%;"><p style="margin-top:8px;"><a href="https://github.com/StepthenJun" target="_blank">严文骏</a></p></div></div>',7)])])}const s=o(r,[["render",d]]),p=JSON.parse('{"path":"/LearningRoute/sx9cq5wg/","title":"Lec2 场景需求","lang":"zh-CN","frontmatter":{"title":"Lec2 场景需求","createTime":"2025/10/04 22:29:53","permalink":"/LearningRoute/sx9cq5wg/"},"readingTime":{"minutes":1.15,"words":346},"git":{"createdTime":1759912112000,"updatedTime":1759912112000},"filePathRelative":"notes/LearningRoute/2.WEB方向/2.WEB后端/4.Lec2 场景需求.md","headers":[]}');export{s as comp,p as data};
