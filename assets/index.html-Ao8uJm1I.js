import{a as s,c as a,d as e,o as l}from"./app-D5tjPIRP.js";const t={};function h(n,i){return l(),a("div",null,[...i[0]||(i[0]=[e(`<h3 id="_1-git-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-git-基本概念"><span>1. Git 基本概念</span></a></h3><p>Git 是一个分布式版本控制系统，用于跟踪文件的更改历史，并允许多人协作开发项目。以下是 Git 的几个重要概念：</p><ul><li><p><strong>仓库（Repository）</strong>：存储项目代码的地方，包含代码的历史记录和所有分支。</p></li><li><p><strong>工作区（Working Directory）</strong>：当前文件的状态，未提交的修改显示在这里。</p></li><li><p><strong>暂存区（Staging Area）</strong>：保存即将提交到版本库的更改。</p></li><li><p><strong>版本库（Local Repository）</strong>：保存提交后的更改，包含完整的项目历史。</p></li><li><p><strong>远程仓库（Remote Repository）</strong>：在远程服务器上保存的版本库，如 GitHub、GitLab 等平台。</p></li></ul><h3 id="_2-git-基本操作" tabindex="-1"><a class="header-anchor" href="#_2-git-基本操作"><span>2. Git 基本操作</span></a></h3><h4 id="_2-1-初始化仓库" tabindex="-1"><a class="header-anchor" href="#_2-1-初始化仓库"><span>2.1 初始化仓库</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>初始化一个新的本地 Git 仓库。</p><h4 id="_2-2-克隆远程仓库" tabindex="-1"><a class="header-anchor" href="#_2-2-克隆远程仓库"><span>2.2 克隆远程仓库</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">repository_ur</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从远程仓库克隆一个项目到本地。</p><h4 id="_2-3-查看当前状态" tabindex="-1"><a class="header-anchor" href="#_2-3-查看当前状态"><span>2.3 查看当前状态</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看工作区、暂存区的文件状态。</p><h4 id="_2-4-添加文件到暂存区" tabindex="-1"><a class="header-anchor" href="#_2-4-添加文件到暂存区"><span>2.4 添加文件到暂存区</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">file_nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将更改的文件添加到暂存区。</p><h4 id="_2-5-提交更改" tabindex="-1"><a class="header-anchor" href="#_2-5-提交更改"><span>2.5 提交更改</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">commit message</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将暂存区的更改提交到本地版本库。</p><h4 id="_2-6-推送更改到远程仓库" tabindex="-1"><a class="header-anchor" href="#_2-6-推送更改到远程仓库"><span>2.6 推送更改到远程仓库</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">branch_nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将本地提交推送到远程仓库的指定分支。</p><h4 id="_2-7-拉取远程更新" tabindex="-1"><a class="header-anchor" href="#_2-7-拉取远程更新"><span>2.7 拉取远程更新</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">branch_nam</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从远程仓库拉取最新的更改并合并到当前分支。</p><h3 id="_3-git-高级操作" tabindex="-1"><a class="header-anchor" href="#_3-git-高级操作"><span>3. Git 高级操作</span></a></h3><h4 id="_3-1-合并分支-merge" tabindex="-1"><a class="header-anchor" href="#_3-1-合并分支-merge"><span>3.1 合并分支（Merge）</span></a></h4><p><strong>意义</strong>：</p><ul><li><p>合并分支是 Git 协作开发中最常见的操作之一。当开发者在不同分支上进行功能开发时，最终需要将各自的分支代码合并到主分支，形成一个统一的代码基线。</p></li><li><p>合并保留了完整的开发历史，能够看到每个功能分支独立的提交过程，有助于追踪开发过程。</p></li></ul><p><strong>体现</strong>：</p><ul><li><p><strong>合并历史保留</strong>：<code>git merge</code> 会生成一个新的合并提交，这个提交明确表示“分支 A 和分支 B 在某个时刻被合并”。</p></li><li><p><strong>分支并行开发</strong>：在多人开发时，各自的功能分支可以独立发展，合并时确保整合不丢失历史记录。</p></li></ul><h4 id="_3-2-压缩提交-squash" tabindex="-1"><a class="header-anchor" href="#_3-2-压缩提交-squash"><span>3.2 压缩提交（Squash）</span></a></h4><p><strong>意义</strong>：</p><ul><li><p>在开发过程中，某个功能可能会产生许多小的提交，尤其是反复修改和修复错误时。为了保持代码历史的简洁清晰，可以在合并前使用 <code>squash</code> 来合并这些零碎的提交。</p></li><li><p>压缩提交有助于减少冗余的提交历史，尤其是当代码评审时，代码库中的提交记录应尽量保持简洁。</p></li></ul><p><strong>体现</strong>：</p><ul><li><p><strong>整洁的提交历史</strong>：通过 <code>squash</code>，你可以将多个零碎提交整合为一个大提交，从而避免零散的提交污染代码库历史。</p></li><li><p><strong>代码评审</strong>：当代码提交进行评审时，提交历史越简洁、明确，评审人员越容易理解每个提交的目的和功能。</p></li></ul><h4 id="_3-3-拉取请求-pull-request" tabindex="-1"><a class="header-anchor" href="#_3-3-拉取请求-pull-request"><span>3.3 拉取请求（Pull Request）</span></a></h4><p><strong>意义</strong>：</p><ul><li><p><strong>代码评审与协作</strong>：Pull Request 是 GitHub 等平台上协作开发的重要流程，开发者通过 PR 请求合并代码，并让团队其他成员进行代码评审，确保代码质量。</p></li><li><p><strong>分支管理</strong>：通过 PR，可以严格控制分支的合并流程，任何更改需要经过评审后才能被合并到主分支。</p></li></ul><p><strong>体现</strong>：</p><ul><li><p><strong>团队协作</strong>：Pull Request 提供了一个结构化的协作流程，每个开发者可以提交自己的更改，并等待团队成员批准。</p></li><li><p><strong>自动化测试集成</strong>：PR 通常可以集成自动化测试，当有人创建 PR 时，自动测试会运行，确保提交的代码没有引入错误。</p></li><li><p><strong>评论与讨论</strong>：在 PR 中，团队成员可以就代码进行评论、讨论，确保每个更改都经过深思熟虑。</p></li></ul><h4 id="_3-4-变基-rebase" tabindex="-1"><a class="header-anchor" href="#_3-4-变基-rebase"><span>3.4 变基（Rebase）</span></a></h4><p><strong>意义</strong>：</p><ul><li><p>变基的核心作用是保持项目的提交历史更加线性、简洁。与 <code>merge</code> 不同，<code>rebase</code> 会将你当前分支的更改应用在目标分支的顶端，重新创建一个线性的历史记录。</p></li><li><p><code>rebase</code> 适用于不希望生成额外合并提交的场景，它让代码历史更具可读性，特别是当有多个功能分支需要合并时。</p></li></ul><p><strong>体现</strong>：</p><ul><li><p><strong>线性提交历史</strong>：<code>git rebase</code> 可以避免复杂的分支结构，特别是当一个项目有多个开发者和多个并行分支时，合并历史变得非常混乱，使用 <code>rebase</code> 可以生成线性、整洁的历史。</p></li><li><p><strong>避免合并提交</strong>：不像 <code>merge</code> 会生成合并节点，<code>rebase</code> 通过“重演”提交，使得提交历史像是一次连续的开发过程，代码历史更简洁。</p></li></ul><h4 id="_3-5-rebase-和-merge-的区别" tabindex="-1"><a class="header-anchor" href="#_3-5-rebase-和-merge-的区别"><span>3.5 Rebase 和 Merge 的区别</span></a></h4><p><strong>Merge 意义</strong>：</p><ul><li><p><code>merge</code> 在保留分支独立历史的同时，生成了一个新的“合并提交”，这对于追踪不同开发人员的工作是有帮助的，能让团队清晰了解每次合并发生的具体情况。</p></li><li><p><strong>适用场景</strong>：多人并行开发，不要求保持提交历史的整洁，反而希望保留每个开发分支的独立性。</p></li></ul><p><strong>Rebase 意义</strong>：</p><ul><li><p><code>rebase</code> 让代码历史更具可读性和清晰性，开发者可以避免生成过多的合并提交。通过线性化提交历史，项目维护者能够更容易理解代码变动的过程。</p></li><li><p><strong>适用场景</strong>：需要简化提交历史的项目，特别是长时间开发的功能分支，在合并时希望历史线性、清晰。</p></li></ul><ol><li>参考资料更新</li></ol><ul><li><p>Git Merge 和 Rebase 的详细解释</p></li><li><p><a href="https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History" target="_blank" rel="noopener noreferrer">Squash 和 Rebase 的具体使用场景</a></p></li></ul><h3 id="_4-示例" tabindex="-1"><a class="header-anchor" href="#_4-示例"><span>4. 示例</span></a></h3><h4 id="示例-1-创建并推送本地项目" tabindex="-1"><a class="header-anchor" href="#示例-1-创建并推送本地项目"><span>示例 1: 创建并推送本地项目</span></a></h4><ol><li><p>初始化 Git 仓库：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>添加文件并提交：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Initial commit</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><ol start="3"><li><p>推送到远程仓库：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">repository_ur</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="示例-2-解决合并冲突" tabindex="-1"><a class="header-anchor" href="#示例-2-解决合并冲突"><span>示例 2: 解决合并冲突</span></a></h4><ol><li><p>拉取远程更新：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>合并分支：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> merge</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> feature_branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><ol start="3"><li><p>解决冲突后，提交合并：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Resolve merge conflict</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5-参考资料" tabindex="-1"><a class="header-anchor" href="#_5-参考资料"><span>5. 参考资料</span></a></h3><ul><li><p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener noreferrer">Pro Git 书籍</a></p></li><li><p><a href="https://git-scm.com/doc" target="_blank" rel="noopener noreferrer">Git 官方文档</a></p></li><li><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener noreferrer">廖雪峰的 Git 教程</a></p></li><li><p><a href="https://www.atlassian.com/git/tutorials" target="_blank" rel="noopener noreferrer">Atlassian Git Tutorial</a></p></li></ul><p>通过这个学习路线，你可以逐步掌握 Git 的基本操作和常用技巧，适应现代开发中的版本控制需求。</p><h2 id="贡献者" tabindex="-1"><a class="header-anchor" href="#贡献者"><span>贡献者</span></a></h2><div class="contributors-list" style="display:flex;gap:20px;flex-wrap:wrap;margin-top:20px;"><div style="text-align:center;"><img src="https://avatars.githubusercontent.com/u/94302726?v=4" alt="魏知乐" style="width:80px;border-radius:50%;"><p style="margin-top:8px;"><a href="https://github.com/spaceluke" target="_blank">魏知乐</a></p></div></div>`,65)])])}const d=s(t,[["render",h]]),p=JSON.parse('{"path":"/LearningRoute/git/","title":"Git 学习路线","lang":"zh-CN","frontmatter":{"title":"Git 学习路线","createTime":"2025/10/03 16:15:20","permalink":"/LearningRoute/git/"},"readingTime":{"minutes":5.73,"words":1719},"git":{"createdTime":1759912112000,"updatedTime":1759912112000},"filePathRelative":"notes/LearningRoute/1.Git/README.md","headers":[]}');export{d as comp,p as data};
